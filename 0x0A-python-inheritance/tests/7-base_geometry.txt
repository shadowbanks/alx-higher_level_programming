===================================
Text case for ```7-base_geometry```
===================================

Using ```Base_geometry```
-------------------------


	"""
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> mod_docs = __import__('7-base_geometry').__doc__
	>>> class_docs = BaseGeometry.__doc__
	>>> area = BaseGeometry.area
	>>> func1_docs = area.__doc__
	>>> integer_validator = BaseGeometry.area
	>>> func2_docs = integer_validator.__doc__
	>>> bg = BaseGeometry()

	>>> len(mod_docs) > 0
	True

	>>> len(class_docs) > 0
	True

	>>> len(func1_docs) > 0
	True

	>>> len(func2_docs) > 0
	True

	>>> bg.area(0)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
	>>> bg.integer_validator("wills", 10)

	>>> bg.integer_validator("wills")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("wills", 10, 10)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator("wills", {})
	Traceback (most recent call last):
    	...
	TypeError: wills must be an integer

	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
    	...
	TypeError: bool must be an integer
